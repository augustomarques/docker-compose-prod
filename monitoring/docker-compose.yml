version: '3'

services:
  prometheus:
    container_name: prod-prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules:/etc/prometheus/alert.rules
      - prod-prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
    ports:
      - "19090:9090"
    networks:
      - monitoring-network

  grafana:
    container_name: prod-grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "13000:3000"
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - prod-grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring-network

  alertmanager: 
    container_name: prod-alertmanager
    image: prom/alertmanager:latest
    restart: unless-stopped
    ports: 
      - "19093:9093"
    volumes:
      - "./alertmanager:/config"
      - prod-alertmanager-data:/data
    command: --config.file=/config/alertmanager.yml --log.level=debug 
    depends_on:
      - prometheus
    networks:
      - monitoring-network

  loki:
    container_name: prod-loki
    image: grafana/loki:latest
    restart: unless-stopped
    ports:
      - "13100:3100"
    command: 
      - -config.file=/etc/loki/local-config.yaml
      - -print-config-stderr=true
    depends_on:
      - grafana
    networks:
      - monitoring-network

volumes:
  prod-prometheus-data:
  prod-grafana-data:
  prod-alertmanager-data:

networks:
  monitoring-network:
    name: prod-development
    external: true
